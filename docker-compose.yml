version: "3.7"

services:
  crawler:
    build:
      context: .
      dockerfile: ./crawler/app.dockerfile
    restart: on-failure
    volumes: 
      - ./logs:/app/logs

  order:
    container_name: order
    build:
      context: .
      dockerfile: ./order/app.dockerfile
    environment:
      ELASTIC_APM_SERVICE_NAME: "order"
      ELASTIC_APM_SERVER_URL: "http://apm:8200"
    restart: on-failure
    ports:
      - "8081:8081"
    networks:
      - elastic
    volumes: 
      - ./logs:/app/logs

  account:
    build:
      context: .
      dockerfile: ./account/app.dockerfile
    restart: on-failure
    volumes: 
      - ./logs:/logs
  
  # obsproj_db:
  #   build:
  #     context: ./account
  #     dockerfile: ./db.dockerfile
  #   environment:
  #     POSTGRES_DB: obsproj
  #     POSTGRES_USER: obsproj
  #     POSTGRES_PASSWORD: 123456
  #   restart: unless-stopped

  apm:
    image: docker.elastic.co/apm/apm-server:7.13.3
    depends_on:
      elasticsearch:
        condition: service_healthy
      #kibana:
      #  condition: service_healthy
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
      - 8200:8200
    networks:
      - elastic
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.13.2"
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "discovery.type=single-node"
    ports:
      - "9200:9200"
    networks:
      - elastic
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:9200/_cat/health"]
      interval: 3s
      timeout: 3s
      retries: 10

  kibana:
    image: "docker.elastic.co/kibana/kibana:7.13.2"
    ports:
      - "5601:5601"
    networks:
      - elastic

  filebeat:
    image: "docker.elastic.co/beats/filebeat:7.13.2"
    volumes:
      - ./config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/logs/
    networks:
      - elastic
  
volumes:
  elasticsearch_data:
  config:
  logs:

networks:
  elastic:
    driver: bridge